'use strict';function getVectorTransform(data) {    if (!(data instanceof PropertyGroup)) return null;    var transform = {},        anchor,        position,        scale,        skew,        skewAxis,        rotation,        opacity;    // Anchorpoint    if (data.property('ADBE Anchor Point') instanceof Property) {        transform.anchorX = getProperty(data.property('ADBE Anchor Point'), 0);        transform.anchorY = getProperty(data.property('ADBE Anchor Point'), 1);    } else if (data.property('ADBE Vector Anchor')instanceof Property) {        transform.anchorX = getProperty(data.property('ADBE Vector Anchor'), 0);        transform.anchorY = getProperty(data.property('ADBE Vector Anchor'), 1);    }//    //Position//    //TODO check for dimensionsSeparated//    var position;//    if (data.property('ADBE Position')instanceof Property) {        transform.positionX = getProperty(data.property('ADBE Position'), 0);        transform.positionY = getProperty(data.property('ADBE Position'), 1);    } else if (data.property('ADBE Vector Position')instanceof Property) {        transform.positionX = getProperty(data.property('ADBE Vector Position'), 0);        transform.positionY = getProperty(data.property('ADBE Vector Position'), 1);    }    //Scale    //scale has two keyframe objects    if (data.property('ADBE Scale')instanceof Property) {        transform.scaleX = getProperty(data.property('ADBE Scale'), 0);        transform.scaleY = getProperty(data.property('ADBE Scale'), 1);    } else if (data.property('ADBE Vector Scale')instanceof Property) {        transform.scaleX = getProperty(data.property('ADBE Vector Scale'), 0);        transform.scaleY = getProperty(data.property('ADBE Vector Scale'), 1);    }    transform.scaleX = normalizeScale(transform.scaleX);    transform.scaleY = normalizeScale(transform.scaleY);    //Skew    // no skew property on layer transform    if (data.property('ADBE Vector Skew')instanceof Property && data.property('ADBE Vector Skew Axis')instanceof Property) {        transform.skew = getProperty(data.property('ADBE Vector Skew'));        transform.skewAxis = getProperty(data.property('ADBE Vector Skew Axis'));    } else {        transform.skew = [            {t: 0, v: 0}        ];        transform.skewAxis = [            {t: 0, v: 0}        ];    }    //Rotation    if (data.property('ADBE Rotate Z')instanceof Property) {        rotation = getProperty(data.property('ADBE Rotate Z'));    } else if (data.property('ADBE Vector Rotation')instanceof Property) {        rotation = getProperty(data.property('ADBE Vector Rotation'));    }    transform.rotation = rotation;    //Opacity    if (data.property('ADBE Opacity')instanceof Property) {        opacity = getProperty(data.property('ADBE Opacity'));    } else if (data.property('ADBE Vector Group Opacity')instanceof Property) {        opacity = getProperty(data.property('ADBE Vector Group Opacity'));    }    transform.opacity = normalizeOpacity(opacity);    return transform;}function normalizeScale(frames) {    for (var i = 0; i < frames.length; i++) {        frames[i].v = frames[i].v / 100;    }    return frames;}function normalizeOpacity(frames) {    for (var i = 0; i < frames.length; i++) {        frames[i].v = frames[i].v / 100;    }    return frames;}