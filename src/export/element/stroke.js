function getStroke(data) {    var stroke = {};    stroke.index = data.propertyIndex;    stroke.join = data.property('ADBE Vector Stroke Line Join').value;    if (stroke.join === 1) stroke.miterLimit = getProperty(data.property('ADBE Vector Stroke Miter Limit'));    stroke.join = setStrokeTypeAsString(stroke.join);    stroke.cap = data.property('ADBE Vector Stroke Line Cap').value;    stroke.cap = setCapTypeAsString(stroke.cap);    stroke.color = getProperty(data.property('ADBE Vector Stroke Color'));    stroke.color = removeValues(stroke.color, 3);    stroke.color = multiplyValue(stroke.color, 255);    stroke.color = roundValue(stroke.color);    stroke.color = normalizeKeyframes(stroke.color);    stroke.opacity = getProperty(data.property('ADBE Vector Stroke Opacity'));    stroke.opacity = normalizeKeyframes(stroke.opacity);    stroke.opacity = divideValue(stroke.opacity, 100);    stroke.width = getProperty(data.property('ADBE Vector Stroke Width'));    stroke.width = normalizeKeyframes(stroke.width);    var dashes = data.property('ADBE Vector Stroke Dashes');    $.writeln(dashes);    if (dashes) {        var obj = {};        var dash = dashes.property('ADBE Vector Stroke Dash 1');        if (dash) {            obj.dash = getProperty(dash);            obj.dash = normalizeKeyframes(obj.dash);        }        var gap = dashes.property('ADBE Vector Stroke Gap 1');        if (gap) {            obj.gap = getProperty(gap);            obj.gap = normalizeKeyframes(obj.gap);        }        var offset = dashes.property('ADBE Vector Stroke Offset');        if (offset) {            obj.offset = getProperty(offset);            obj.offset = normalizeKeyframes(obj.offset);        }        stroke.dashes = obj;    }    return stroke;    function setStrokeTypeAsString(number) {        switch (number) {            case 2:                return 'round';                break;            case 3:                return 'bevel';                break;            default:                return 'miter';        }    }    function setCapTypeAsString(number) {        switch (number) {            case 2:                return 'round';                break;            case 3:                return 'square';                break;            default:                return 'butt';        }    }}