{"version":3,"sources":["webpack://AE2Canvas/webpack/universalModuleDefinition","webpack://AE2Canvas/webpack/bootstrap","webpack://AE2Canvas/./node_modules/tiny-emitter/index.js","webpack://AE2Canvas/./src/core.js","webpack://AE2Canvas/./src/utils/Bezier.js","webpack://AE2Canvas/./src/objects/Path.js","webpack://AE2Canvas/./src/utils/BezierEasing.js","webpack://AE2Canvas/./src/objects/AnimatedPath.js","webpack://AE2Canvas/./src/property/Property.js","webpack://AE2Canvas/./src/property/AnimatedProperty.js","webpack://AE2Canvas/./src/transform/Position.js","webpack://AE2Canvas/./src/transform/Transform.js","webpack://AE2Canvas/./src/effects/DropShadow.js","webpack://AE2Canvas/./src/layers/BaseLayer.js","webpack://AE2Canvas/./src/layers/ImageLayer.js","webpack://AE2Canvas/./src/layers/NullLayer.js","webpack://AE2Canvas/./src/layers/TextLayer.js","webpack://AE2Canvas/./src/objects/Ellipse.js","webpack://AE2Canvas/./src/objects/Polystar.js","webpack://AE2Canvas/./src/objects/Rect.js","webpack://AE2Canvas/./src/property/Fill.js","webpack://AE2Canvas/./src/property/GradientFill.js","webpack://AE2Canvas/./src/property/Stroke.js","webpack://AE2Canvas/./src/property/Trim.js","webpack://AE2Canvas/./src/layers/VectorLayer.js","webpack://AE2Canvas/./src/layers/CompLayer.js","webpack://AE2Canvas/./src/Animation.js","webpack://AE2Canvas/./src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","E","on","callback","ctx","e","push","fn","once","listener","off","apply","arguments","_","emit","data","slice","evtArr","len","length","evts","liveEvents","_rafId","_animations","_animationsLength","_autoPlay","update","time","requestAnimationFrame","undefined","performance","now","autoPlay","auto","cancelAnimationFrame","add","tween","remove","indexOf","splice","Bezier","path","_classCallCheck","steps","Math","max","floor","arcLengths","Array","ox","cubicN","oy","clen","iterator","x","y","dx","dy","sqrt","u","targetLength","low","high","index","lengthBefore","elapsed","map","pct","a","b","t2","Path","Path_classCallCheck","closed","frames","trim","frame","getValue","start","end","drawNormal","drawTrimmed","vertices","v","numVertices","lastVertex","nextVertex","moveTo","bezierCurveTo","closePath","_this$getTrimValues","getTrimValues","endIndex","startIndex","looped","firstRound","tv","tv1","tv2","actualTrim","totalLen","sumArray","trimStartAtLength","trimEndAtLength","from","to","values","isStraight","lerp","bezier","getLength","e1","f1","g1","h1","j1","k1","startVertex","endVertex","e2","f2","g2","h2","j2","k2","arr","reduce","startX","startY","ctrl1X","ctrl1Y","ctrl2X","ctrl2Y","endX","endY","reversed","NEWTON_ITERATIONS","NEWTON_MIN_SLOPE","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","kSplineTableSize","kSampleStepSize","float32ArraySupported","Float32Array","BezierEasing","mX1","mY1","mX2","mY2","Error","isNaN","isFinite","mSampleValues","A","aA1","aA2","B","C","calcBezier","aT","getSlope","getTForX","aX","intervalStart","currentSample","lastSample","guessForT","initialSlope","aGuessT","currentSlope","newtonRaphsonIterate","aA","aB","currentX","currentT","abs","binarySubdivide","calcSampleValues","f","str","toString","css","ease","linear","ease-in","ease-out","ease-in-out","AnimatedPath","_this","AnimatedPath_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","frameCount","verticesCount","finished","nextFrame","started","lastFrame","pointer","onKeyframeChange","getValueAtTime","setEasing","easeOut","easeIn","easing","actualVertices","actualLength","cp1x","cp1y","cp2x","cp2y","j","Property","Property_classCallCheck","AnimatedProperty","AnimatedProperty_classCallCheck","AnimatedProperty_possibleConstructorReturn","AnimatedProperty_getPrototypeOf","getElapsed","Position","setMotionPath","motionpath","getValues","Transform","Transform_classCallCheck","position","positionX","positionY","anchor","scaleX","scaleY","skew","skewAxis","rotation","opacity","deg2rad","globalAlpha","transform","setRotation","setSkew","setScale","rad","cos","sin","sx","sy","axis","tan","deg","PI","setKeyframes","reset","DropShadow","DropShadow_classCallCheck","color","direction","distance","softness","concat","round","getColor","dist","blur","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","BaseLayer","BaseLayer_classCallCheck","in","out","parent","effects","dropShadow","masks","mask","isAnimated","save","setParentTransform","setShadow","beginPath","forEach","draw","clip","ImageLayer","ImageLayer_classCallCheck","ImageLayer_possibleConstructorReturn","ImageLayer_getPrototypeOf","source","isLoaded","cb","_this2","Promise","resolve","reject","img","Image","onload","src","_get","drawImage","restore","NullLayer","NullLayer_classCallCheck","NullLayer_possibleConstructorReturn","NullLayer_getPrototypeOf","NullLayer_get","TextLayer","baseFont","TextLayer_classCallCheck","TextLayer_possibleConstructorReturn","TextLayer_getPrototypeOf","text","leading","fontSize","font","justification","TextLayer_get","textAlign","fillStyle","fillText","Ellipse","Ellipse_classCallCheck","Ellipse_possibleConstructorReturn","Ellipse_getPrototypeOf","size","w","h","ow","oh","Polystar","Polystar_classCallCheck","starType","points","innerRadius","outerRadius","innerRoundness","outerRoundness","rotatePoint","translate","pInner","pOuter","pOuter1Tangent","pOuter2Tangent","pInner1Tangent","pInner2Tangent","rot","outerOffset","innerOffset","cx","cy","radians","Rect","Rect_classCallCheck","roundness","arcTo","Fill","Fill_classCallCheck","GradientFill","gradients","GradientFill_classCallCheck","stops","type","startPoint","endPoint","radius","distX","distY","gradient","createRadialGradient","createLinearGradient","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","stop","addColorStop","location","err","return","Stroke","Stroke_classCallCheck","join","cap","miterLimit","width","dashes","dash","gap","offset","strokeColor","strokeWidth","strokeJoin","lineWidth","lineJoin","lineCap","strokeStyle","setLineDash","lineDashOffset","Trim","Trim_classCallCheck","startValue","endValue","min","VectorLayer","VectorLayer_classCallCheck","VectorLayer_possibleConstructorReturn","VectorLayer_getPrototypeOf","fill","gradientFill","stroke","groups","group","shapes","shape","parentFill","parentStroke","parentTrim","VectorLayer_get","trimValues","getTrim","CompLayer","comps","imageBasePath","CompLayer_classCallCheck","CompLayer_possibleConstructorReturn","CompLayer_getPrototypeOf","sourceID","layers","layer","parentIndex","find","timeRemapping","CompLayer_get","internalTime","Animation","options","Animation_classCallCheck","Animation_getPrototypeOf","pausedTime","duration","baseWidth","baseHeight","height","ratio","markers","loop","devicePixelRatio","window","fluid","isPaused","isPlaying","drawFrame","canvas","document","createElement","getContext","resize","Animation_assertThisInitialized","Emitter","id","marker","getMarker","comment","console","warn","promises","filter","preload","all","catch","error","parentNode","removeChild","clientWidth","scale","fps","maxWidth","numFrames","buffer","rowsX","rowsY","ceil","indexX","indexY","offsetX","offsetY","_this3","clearRect","then","delta","stopMarker","checkStopMarkers","play","pause","step","_reversed","bool","__webpack_exports__","src_Animation"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"AE2Canvas\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AE2Canvas\"] = factory();\n\telse\n\t\troot[\"AE2Canvas\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\n","const _animations = [];\r\nlet _animationsLength = 0;\r\n\r\nlet _autoPlay = false;\r\nlet _rafId;\r\n\r\nconst update = time => {\r\n    if (_autoPlay) {\r\n        _rafId = requestAnimationFrame(update);\r\n    }\r\n    time = time !== undefined ? time : performance.now();\r\n\r\n    for (let i = 0; i < _animationsLength; i++) {\r\n        _animations[i].update(time);\r\n    }\r\n};\r\n\r\nconst autoPlay = auto => {\r\n    _autoPlay = auto;\r\n    _autoPlay ? _rafId = requestAnimationFrame(update) : cancelAnimationFrame(_rafId);\r\n};\r\n\r\nfunction add(tween) {\r\n    _animations.push(tween);\r\n    _animationsLength = _animations.length;\r\n}\r\n\r\nfunction remove(tween) {\r\n    const i = _animations.indexOf(tween);\r\n    if (i > -1) {\r\n        _animations.splice(i, 1);\r\n        _animationsLength = _animations.length;\r\n    }\r\n}\r\n\r\nexport {update, autoPlay, add, remove};\r\n","class Bezier {\r\n\r\n    constructor(path) {\r\n        this.path = path;\r\n    }\r\n\r\n    getLength(len) {\r\n        this.steps = Math.max(Math.floor(len / 10), 1);\r\n        this.arcLengths = new Array(this.steps + 1);\r\n        this.arcLengths[0] = 0;\r\n\r\n        let ox = this.cubicN(0, this.path[0], this.path[2], this.path[4], this.path[6]);\r\n        let oy = this.cubicN(0, this.path[1], this.path[3], this.path[5], this.path[7]);\r\n        let clen = 0;\r\n        const iterator = 1 / this.steps;\r\n\r\n        for (let i = 1; i <= this.steps; i += 1) {\r\n            const x = this.cubicN(i * iterator, this.path[0], this.path[2], this.path[4], this.path[6]);\r\n            const y = this.cubicN(i * iterator, this.path[1], this.path[3], this.path[5], this.path[7]);\r\n            const dx = ox - x;\r\n            const dy = oy - y;\r\n\r\n            clen += Math.sqrt(dx * dx + dy * dy);\r\n            this.arcLengths[i] = clen;\r\n\r\n            ox = x;\r\n            oy = y;\r\n        }\r\n\r\n        this.length = clen;\r\n    }\r\n\r\n    map(u) {\r\n        const targetLength = u * this.arcLengths[this.steps];\r\n        let low = 0;\r\n        let high = this.steps;\r\n        let index = 0;\r\n\r\n        while (low < high) {\r\n            index = low + (((high - low) / 2) | 0);\r\n            if (this.arcLengths[index] < targetLength) {\r\n                low = index + 1;\r\n\r\n            } else {\r\n                high = index;\r\n            }\r\n        }\r\n        if (this.arcLengths[index] > targetLength) {\r\n            index--;\r\n        }\r\n\r\n        const lengthBefore = this.arcLengths[index];\r\n        if (lengthBefore === targetLength) {\r\n            return index / this.steps;\r\n        } else {\r\n            return (index + (targetLength - lengthBefore) / (this.arcLengths[index + 1] - lengthBefore)) / this.steps;\r\n        }\r\n    }\r\n\r\n    getValues(elapsed) {\r\n        const t = this.map(elapsed);\r\n        const x = this.cubicN(t, this.path[0], this.path[2], this.path[4], this.path[6]);\r\n        const y = this.cubicN(t, this.path[1], this.path[3], this.path[5], this.path[7]);\r\n\r\n        return [x, y];\r\n    }\r\n\r\n    cubicN(pct, a, b, c, d) {\r\n        const t2 = pct * pct;\r\n        const t3 = t2 * pct;\r\n        return a + (-a * 3 + pct * (3 * a - a * pct)) * pct\r\n            + (3 * b + pct * (-6 * b + b * 3 * pct)) * pct\r\n            + (c * 3 - c * 3 * pct) * t2\r\n            + d * t3;\r\n    }\r\n}\r\n\r\nexport default Bezier;","import Bezier from '../utils/Bezier'\r\n\r\nclass Path {\r\n\r\n    constructor(data) {\r\n        this.closed = data.closed\r\n        this.frames = data.frames\r\n    }\r\n\r\n    draw(ctx, time, trim) {\r\n        const frame = this.getValue(time)\r\n        trim && (trim.start !== 0 || trim.end !== 1) ? this.drawTrimmed(frame, ctx, trim) : this.drawNormal(frame, ctx)\r\n    }\r\n\r\n    drawNormal(frame, ctx) {\r\n        const vertices = frame.v\r\n        const numVertices = this.closed ? vertices.length : vertices.length - 1\r\n        let lastVertex = null\r\n        let nextVertex = null\r\n\r\n        for (let i = 1; i <= numVertices; i++) {\r\n            lastVertex = vertices[i - 1]\r\n            nextVertex = vertices[i] ? vertices[i] : vertices[0]\r\n            if (i === 1) ctx.moveTo(lastVertex[4], lastVertex[5])\r\n            ctx.bezierCurveTo(lastVertex[0], lastVertex[1], nextVertex[2], nextVertex[3], nextVertex[4], nextVertex[5])\r\n        }\r\n\r\n        if (this.closed) {\r\n            if (!nextVertex) debugger\r\n            ctx.bezierCurveTo(nextVertex[0], nextVertex[1], vertices[0][2], vertices[0][3], vertices[0][4], vertices[0][5])\r\n            ctx.closePath()\r\n        }\r\n    }\r\n\r\n    drawTrimmed(frame, ctx, trim) {\r\n        if (trim.start === trim.end) return\r\n\r\n        const vertices = frame.v\r\n        const numVertices = this.closed ? vertices.length : vertices.length - 1\r\n\r\n        let nextVertex\r\n        let lastVertex\r\n\r\n        const {start, end, endIndex, startIndex, looped} = this.getTrimValues(trim, frame)\r\n\r\n        if (looped && this.closed) {\r\n            let index = startIndex\r\n            let firstRound = true\r\n\r\n            for (let i = 1; i <= numVertices + 1; i++) {\r\n                lastVertex = vertices[index]\r\n                nextVertex = vertices[index + 1] ? vertices[index + 1] : vertices[0]\r\n                const length = frame.len[index]\r\n\r\n                if (index === startIndex && firstRound) {\r\n                    firstRound = false\r\n                    const tv = this.trim(lastVertex, nextVertex, start, 1, length)\r\n                    ctx.moveTo(tv.start[4], tv.start[5])\r\n                    ctx.bezierCurveTo(tv.start[0], tv.start[1], tv.end[2], tv.end[3], tv.end[4], tv.end[5])\r\n                } else if (index === startIndex && index === endIndex) {\r\n                    const tv = this.trim(lastVertex, nextVertex, 0, end, length)\r\n                    ctx.bezierCurveTo(tv.start[0], tv.start[1], tv.end[2], tv.end[3], tv.end[4], tv.end[5])\r\n                } else if (index === endIndex) {\r\n                    const tv = this.trim(lastVertex, nextVertex, 0, end, length)\r\n                    ctx.bezierCurveTo(tv.start[0], tv.start[1], tv.end[2], tv.end[3], tv.end[4], tv.end[5])\r\n                } else if (index < endIndex || index > startIndex) {\r\n                    ctx.bezierCurveTo(lastVertex[0], lastVertex[1], nextVertex[2], nextVertex[3], nextVertex[4], nextVertex[5])\r\n                }\r\n\r\n                index + 1 < numVertices ? index++ : index = 0\r\n            }\r\n        } else if (looped && !this.closed) {\r\n\r\n            for (let i = 1; i <= numVertices; i++) {\r\n                const index = i - 1\r\n                lastVertex = vertices[index]\r\n                nextVertex = vertices[index + 1] ? vertices[index + 1] : vertices[0]\r\n                const length = frame.len[index]\r\n\r\n                if (index === startIndex && index === endIndex) {\r\n                    const tv1 = this.trim(lastVertex, nextVertex, 0, end, length)\r\n                    ctx.bezierCurveTo(tv1.start[0], tv1.start[1], tv1.end[2], tv1.end[3], tv1.end[4], tv1.end[5])\r\n\r\n                    const tv2 = this.trim(lastVertex, nextVertex, start, 1, length)\r\n                    ctx.moveTo(tv2.start[4], tv2.start[5])\r\n                    ctx.bezierCurveTo(tv2.start[0], tv2.start[1], tv2.end[2], tv2.end[3], tv2.end[4], tv2.end[5])\r\n                } else if (index === startIndex) {\r\n                    const tv = this.trim(lastVertex, nextVertex, start, 1, length)\r\n                    ctx.moveTo(tv.start[4], tv.start[5])\r\n                    ctx.bezierCurveTo(tv.start[0], tv.start[1], tv.end[2], tv.end[3], tv.end[4], tv.end[5])\r\n                } else if (index === endIndex) {\r\n                    const tv = this.trim(lastVertex, nextVertex, 0, end, length)\r\n                    ctx.bezierCurveTo(tv.start[0], tv.start[1], tv.end[2], tv.end[3], tv.end[4], tv.end[5])\r\n                } else if (index < endIndex || index > startIndex) {\r\n                    ctx.bezierCurveTo(lastVertex[0], lastVertex[1], nextVertex[2], nextVertex[3], nextVertex[4], nextVertex[5])\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = 1; i <= numVertices; i++) {\r\n                const index = i - 1\r\n                lastVertex = vertices[i - 1]\r\n                nextVertex = vertices[i] ? vertices[i] : vertices[0]\r\n                if (index === startIndex && index === endIndex) {\r\n                    const tv = this.trim(lastVertex, nextVertex, start, end, length)\r\n                    ctx.moveTo(tv.start[4], tv.start[5])\r\n                    ctx.bezierCurveTo(tv.start[0], tv.start[1], tv.end[2], tv.end[3], tv.end[4], tv.end[5])\r\n                }\r\n                else if (index === startIndex) {\r\n                    const tv = this.trim(lastVertex, nextVertex, start, 1, length)\r\n                    ctx.moveTo(tv.start[4], tv.start[5])\r\n                    ctx.bezierCurveTo(tv.start[0], tv.start[1], tv.end[2], tv.end[3], tv.end[4], tv.end[5])\r\n                }\r\n                else if (index === endIndex) {\r\n                    const tv = this.trim(lastVertex, nextVertex, 0, end, length)\r\n                    ctx.bezierCurveTo(tv.start[0], tv.start[1], tv.end[2], tv.end[3], tv.end[4], tv.end[5])\r\n                }\r\n                else if (index > startIndex && index < endIndex) {\r\n                    ctx.bezierCurveTo(lastVertex[0], lastVertex[1], nextVertex[2], nextVertex[3], nextVertex[4], nextVertex[5])\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getValue() {\r\n        return this.frames[0]\r\n    }\r\n\r\n    getTrimValues(trim, frame) {\r\n        const actualTrim = {\r\n            startIndex: 0,\r\n            endIndex: 0,\r\n            start: 0,\r\n            end: 0,\r\n            looped: false\r\n        }\r\n\r\n        if (trim.start === 0 && trim.end === 1) {\r\n            return null\r\n        }\r\n\r\n        const totalLen = this.sumArray(frame.len)\r\n        let trimStartAtLength = totalLen * trim.start\r\n\r\n        for (let i = 0; i < frame.len.length; i++) {\r\n            if (trimStartAtLength === 0 || trimStartAtLength < frame.len[i]) {\r\n                actualTrim.startIndex = i\r\n                actualTrim.start = trimStartAtLength / frame.len[i]\r\n                break\r\n            }\r\n            trimStartAtLength -= frame.len[i]\r\n        }\r\n\r\n        let trimEndAtLength = totalLen * trim.end\r\n\r\n        if (trim.end === 1) {\r\n            actualTrim.endIndex = frame.len.length\r\n            actualTrim.end = 1\r\n            return actualTrim\r\n        }\r\n\r\n        for (let i = 0; i < frame.len.length; i++) {\r\n            if (trimEndAtLength === 0 || trimEndAtLength < frame.len[i]) {\r\n                actualTrim.endIndex = i\r\n                actualTrim.end = trimEndAtLength / frame.len[i]\r\n                break\r\n            }\r\n            trimEndAtLength -= frame.len[i]\r\n        }\r\n\r\n        actualTrim.looped = actualTrim.startIndex > actualTrim.endIndex || (actualTrim.startIndex === actualTrim.endIndex && actualTrim.start >= actualTrim.end)\r\n\r\n        return actualTrim\r\n    }\r\n\r\n    trim(lastVertex, nextVertex, from, to, len) {\r\n        const values = {\r\n            start: lastVertex,\r\n            end: nextVertex,\r\n        }\r\n\r\n        if (from === 0 && to === 1) {\r\n            return values\r\n        }\r\n\r\n        if (this.isStraight(lastVertex[4], lastVertex[5], lastVertex[0], lastVertex[1], nextVertex[2], nextVertex[3], nextVertex[4], nextVertex[5])) {\r\n            values.start = [\r\n                this.lerp(lastVertex[0], nextVertex[0], from),\r\n                this.lerp(lastVertex[1], nextVertex[1], from),\r\n                this.lerp(lastVertex[2], nextVertex[2], from),\r\n                this.lerp(lastVertex[3], nextVertex[3], from),\r\n                this.lerp(lastVertex[4], nextVertex[4], from),\r\n                this.lerp(lastVertex[5], nextVertex[5], from)\r\n            ]\r\n\r\n            values.end = [\r\n                this.lerp(lastVertex[0], nextVertex[0], to),\r\n                this.lerp(lastVertex[1], nextVertex[1], to),\r\n                this.lerp(lastVertex[2], nextVertex[2], to),\r\n                this.lerp(lastVertex[3], nextVertex[3], to),\r\n                this.lerp(lastVertex[4], nextVertex[4], to),\r\n                this.lerp(lastVertex[5], nextVertex[5], to)\r\n            ]\r\n\r\n            return values\r\n\r\n        } else {\r\n            this.bezier = new Bezier([lastVertex[4], lastVertex[5], lastVertex[0], lastVertex[1], nextVertex[2], nextVertex[3], nextVertex[4], nextVertex[5]])\r\n            this.bezier.getLength(len)\r\n            from = this.bezier.map(from)\r\n            to = this.bezier.map(to)\r\n            to = (to - from) / (1 - from)\r\n\r\n            let e1 = [this.lerp(lastVertex[4], lastVertex[0], from), this.lerp(lastVertex[5], lastVertex[1], from)]\r\n            let f1 = [this.lerp(lastVertex[0], nextVertex[2], from), this.lerp(lastVertex[1], nextVertex[3], from)]\r\n            let g1 = [this.lerp(nextVertex[2], nextVertex[4], from), this.lerp(nextVertex[3], nextVertex[5], from)]\r\n            let h1 = [this.lerp(e1[0], f1[0], from), this.lerp(e1[1], f1[1], from)]\r\n            let j1 = [this.lerp(f1[0], g1[0], from), this.lerp(f1[1], g1[1], from)]\r\n            let k1 = [this.lerp(h1[0], j1[0], from), this.lerp(h1[1], j1[1], from)]\r\n\r\n            let startVertex = [j1[0], j1[1], h1[0], h1[1], k1[0], k1[1]]\r\n            let endVertex = [nextVertex[0], nextVertex[1], g1[0], g1[1], nextVertex[4], nextVertex[5]]\r\n\r\n            let e2 = [this.lerp(startVertex[4], startVertex[0], to), this.lerp(startVertex[5], startVertex[1], to)]\r\n            let f2 = [this.lerp(startVertex[0], endVertex[2], to), this.lerp(startVertex[1], endVertex[3], to)]\r\n            let g2 = [this.lerp(endVertex[2], endVertex[4], to), this.lerp(endVertex[3], endVertex[5], to)]\r\n\r\n            let h2 = [this.lerp(e2[0], f2[0], to), this.lerp(e2[1], f2[1], to)]\r\n            let j2 = [this.lerp(f2[0], g2[0], to), this.lerp(f2[1], g2[1], to)]\r\n            let k2 = [this.lerp(h2[0], j2[0], to), this.lerp(h2[1], j2[1], to)]\r\n\r\n            values.start = [e2[0], e2[1], startVertex[2], startVertex[3], startVertex[4], startVertex[5]]\r\n            values.end = [j2[0], j2[1], h2[0], h2[1], k2[0], k2[1]]\r\n\r\n            return values\r\n        }\r\n    }\r\n\r\n    lerp(a, b, t) {\r\n        const s = 1 - t\r\n        return a * s + b * t\r\n    }\r\n\r\n    sumArray(arr) {\r\n        function add(a, b) {\r\n            return a + b\r\n        }\r\n\r\n        return arr.reduce(add)\r\n    }\r\n\r\n    isStraight(startX, startY, ctrl1X, ctrl1Y, ctrl2X, ctrl2Y, endX, endY) {\r\n        return startX === ctrl1X && startY === ctrl1Y && endX === ctrl2X && endY === ctrl2Y\r\n    }\r\n\r\n    setKeyframes(time) {\r\n    }\r\n\r\n    reset(reversed) {\r\n    }\r\n}\r\n\r\nexport default Path\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","/**\r\n * BezierEasing - use bezier curve for transition easing function\r\n * is based on Firefox's nsSMILKeySpline.cpp\r\n * Usage:\r\n * var spline = BezierEasing(0.25, 0.1, 0.25, 1.0)\r\n * spline(x) => returns the easing value | x must be in [0, 1] range\r\n *\r\n */\r\n\r\n    // These values are established by empiricism with tests (tradeoff: performance VS precision)\r\n    var NEWTON_ITERATIONS = 4;\r\n    var NEWTON_MIN_SLOPE = 0.001;\r\n    var SUBDIVISION_PRECISION = 0.0000001;\r\n    var SUBDIVISION_MAX_ITERATIONS = 10;\r\n\r\n    var kSplineTableSize = 11;\r\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\n\r\n    var float32ArraySupported = typeof Float32Array === \"function\";\r\n\r\n    function BezierEasing (mX1, mY1, mX2, mY2) {\r\n\r\n        // Validate arguments\r\n        if (arguments.length !== 4) {\r\n            throw new Error(\"BezierEasing requires 4 arguments.\");\r\n        }\r\n        for (var i=0; i<4; ++i) {\r\n            if (typeof arguments[i] !== \"number\" || isNaN(arguments[i]) || !isFinite(arguments[i])) {\r\n                throw new Error(\"BezierEasing arguments should be integers.\");\r\n            }\r\n        }\r\n        if (mX1 < 0 || mX1 > 1 || mX2 < 0 || mX2 > 1) {\r\n            throw new Error(\"BezierEasing x values must be in [0, 1] range.\");\r\n        }\r\n\r\n        var mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\r\n\r\n        function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\r\n        function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\r\n        function C (aA1)      { return 3.0 * aA1; }\r\n\r\n        // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\n        function calcBezier (aT, aA1, aA2) {\r\n            return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\r\n        }\r\n\r\n        // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\r\n        function getSlope (aT, aA1, aA2) {\r\n            return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\r\n        }\r\n\r\n        function newtonRaphsonIterate (aX, aGuessT) {\r\n            for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n                var currentSlope = getSlope(aGuessT, mX1, mX2);\r\n                if (currentSlope === 0.0) return aGuessT;\r\n                var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n                aGuessT -= currentX / currentSlope;\r\n            }\r\n            return aGuessT;\r\n        }\r\n\r\n        function calcSampleValues () {\r\n            for (var i = 0; i < kSplineTableSize; ++i) {\r\n                mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n            }\r\n        }\r\n\r\n        function binarySubdivide (aX, aA, aB) {\r\n            var currentX, currentT, i = 0;\r\n            do {\r\n                currentT = aA + (aB - aA) / 2.0;\r\n                currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n                if (currentX > 0.0) {\r\n                    aB = currentT;\r\n                } else {\r\n                    aA = currentT;\r\n                }\r\n            } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\r\n            return currentT;\r\n        }\r\n\r\n        function getTForX (aX) {\r\n            var intervalStart = 0.0;\r\n            var currentSample = 1;\r\n            var lastSample = kSplineTableSize - 1;\r\n\r\n            for (; currentSample != lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\r\n                intervalStart += kSampleStepSize;\r\n            }\r\n            --currentSample;\r\n\r\n            // Interpolate to provide an initial guess for t\r\n            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample+1] - mSampleValues[currentSample]);\r\n            var guessForT = intervalStart + dist * kSampleStepSize;\r\n\r\n            var initialSlope = getSlope(guessForT, mX1, mX2);\r\n            if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n                return newtonRaphsonIterate(aX, guessForT);\r\n            } else if (initialSlope == 0.0) {\r\n                return guessForT;\r\n            } else {\r\n                return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize);\r\n            }\r\n        }\r\n\r\n        if (mX1 != mY1 || mX2 != mY2)\r\n            calcSampleValues();\r\n\r\n        var f = function (aX) {\r\n            if (mX1 === mY1 && mX2 === mY2) return aX; // linear\r\n            // Because JavaScript number are imprecise, we should guarantee the extremes are right.\r\n            if (aX === 0) return 0;\r\n            if (aX === 1) return 1;\r\n            return calcBezier(getTForX(aX), mY1, mY2);\r\n        };\r\n        var str = \"BezierEasing(\"+[mX1, mY1, mX2, mY2]+\")\";\r\n        f.toString = function () { return str; };\r\n\r\n        return f;\r\n    }\r\n\r\n    // CSS mapping\r\n    BezierEasing.css = {\r\n        \"ease\":        BezierEasing(0.25, 0.1, 0.25, 1.0),\r\n        \"linear\":      BezierEasing(0.00, 0.0, 1.00, 1.0),\r\n        \"ease-in\":     BezierEasing(0.42, 0.0, 1.00, 1.0),\r\n        \"ease-out\":    BezierEasing(0.00, 0.0, 0.58, 1.0),\r\n        \"ease-in-out\": BezierEasing(0.42, 0.0, 0.58, 1.0)\r\n    };\r\n\r\nexport default BezierEasing","import Path from './Path'\r\nimport BezierEasing from '../utils/BezierEasing'\r\n\r\nclass AnimatedPath extends Path {\r\n\r\n    constructor(data) {\r\n        super(data)\r\n        this.frameCount = this.frames.length\r\n        this.verticesCount = this.frames[0].v.length\r\n    }\r\n\r\n    getValue(time) {\r\n        if (this.finished && time >= this.nextFrame.t) {\r\n            return this.nextFrame\r\n        } else if (!this.started && time <= this.lastFrame.t) {\r\n            return this.lastFrame\r\n        } else {\r\n            this.started = true\r\n            this.finished = false\r\n            if (time > this.nextFrame.t) {\r\n                if (this.pointer + 1 === this.frameCount) {\r\n                    this.finished = true\r\n                } else {\r\n                    this.pointer++\r\n                    this.lastFrame = this.frames[this.pointer - 1]\r\n                    this.nextFrame = this.frames[this.pointer]\r\n                    this.onKeyframeChange()\r\n                }\r\n            } else if (time < this.lastFrame.t) {\r\n                if (this.pointer < 2) {\r\n                    this.started = false\r\n                } else {\r\n                    this.pointer--\r\n                    this.lastFrame = this.frames[this.pointer - 1]\r\n                    this.nextFrame = this.frames[this.pointer]\r\n                    this.onKeyframeChange()\r\n                }\r\n            }\r\n            return this.getValueAtTime(time)\r\n        }\r\n    }\r\n\r\n    setKeyframes(time) {\r\n        if (time < this.frames[0].t) {\r\n            this.pointer = 1\r\n            this.nextFrame = this.frames[this.pointer]\r\n            this.lastFrame = this.frames[this.pointer - 1]\r\n            this.onKeyframeChange()\r\n            return\r\n        }\r\n\r\n        if (time > this.frames[this.frameCount - 1].t) {\r\n            this.pointer = this.frameCount - 1\r\n            this.nextFrame = this.frames[this.pointer]\r\n            this.lastFrame = this.frames[this.pointer - 1]\r\n            this.onKeyframeChange()\r\n            return\r\n        }\r\n\r\n        for (let i = 1; i < this.frameCount; i++) {\r\n            if (time >= this.frames[i - 1].t && time <= this.frames[i]) {\r\n                this.pointer = i\r\n                this.lastFrame = this.frames[i - 1]\r\n                this.nextFrame = this.frames[i]\r\n                this.onKeyframeChange()\r\n                return\r\n            }\r\n        }\r\n    }\r\n\r\n    onKeyframeChange() {\r\n        this.setEasing()\r\n    }\r\n\r\n    lerp(a, b, t) {\r\n        return a + t * (b - a)\r\n    }\r\n\r\n    setEasing() {\r\n        if (this.lastFrame.easeOut && this.nextFrame.easeIn) {\r\n            this.easing = new BezierEasing(this.lastFrame.easeOut[0], this.lastFrame.easeOut[1], this.nextFrame.easeIn[0], this.nextFrame.easeIn[1])\r\n        } else {\r\n            this.easing = null\r\n        }\r\n    }\r\n\r\n    getValueAtTime(time) {\r\n        const delta = (time - this.lastFrame.t)\r\n        const duration = this.nextFrame.t - this.lastFrame.t\r\n        let elapsed = delta / duration\r\n        if (elapsed > 1) elapsed = 1\r\n        else if (elapsed < 0) elapsed = 0\r\n        else if (this.easing) elapsed = this.easing(elapsed)\r\n        const actualVertices = []\r\n        const actualLength = []\r\n\r\n        for (let i = 0; i < this.verticesCount; i++) {\r\n            const cp1x = this.lerp(this.lastFrame.v[i][0], this.nextFrame.v[i][0], elapsed)\r\n            const cp1y = this.lerp(this.lastFrame.v[i][1], this.nextFrame.v[i][1], elapsed)\r\n            const cp2x = this.lerp(this.lastFrame.v[i][2], this.nextFrame.v[i][2], elapsed)\r\n            const cp2y = this.lerp(this.lastFrame.v[i][3], this.nextFrame.v[i][3], elapsed)\r\n            const x = this.lerp(this.lastFrame.v[i][4], this.nextFrame.v[i][4], elapsed)\r\n            const y = this.lerp(this.lastFrame.v[i][5], this.nextFrame.v[i][5], elapsed)\r\n\r\n            actualVertices.push([cp1x, cp1y, cp2x, cp2y, x, y])\r\n        }\r\n\r\n        for (let j = 0; j < this.verticesCount - 1; j++) {\r\n            actualLength.push(this.lerp(this.lastFrame.len[j], this.nextFrame.len[j], elapsed))\r\n        }\r\n\r\n        return {\r\n            v: actualVertices,\r\n            len: actualLength\r\n        }\r\n    }\r\n\r\n    reset(reversed) {\r\n        this.finished = false\r\n        this.started = false\r\n        this.pointer = reversed ? this.frameCount - 1 : 1\r\n        this.nextFrame = this.frames[this.pointer]\r\n        this.lastFrame = this.frames[this.pointer - 1]\r\n        this.onKeyframeChange()\r\n    }\r\n}\r\n\r\nexport default AnimatedPath\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","class Property {\r\n    constructor(data) {\r\n        this.frames = data;\r\n    }\r\n\r\n    getValue() {\r\n        return this.frames[0].v;\r\n    }\r\n\r\n    setKeyframes(time) {\r\n    }\r\n\r\n    reset(reversed) {\r\n    }\r\n}\r\n\r\nexport default Property;","import Property from './Property';\r\nimport BezierEasing from '../utils/BezierEasing';\r\n\r\nclass AnimatedProperty extends Property {\r\n\r\n    constructor(data) {\r\n        super(data);\r\n        this.frameCount = this.frames.length;\r\n    }\r\n\r\n    lerp(a, b, t) {\r\n        if (a instanceof Array) {\r\n            const arr = [];\r\n            for (let i = 0; i < a.length; i++) {\r\n                arr[i] = a[i] + t * (b[i] - a[i]);\r\n            }\r\n            return arr;\r\n        } else {\r\n            return a + t * (b - a);\r\n        }\r\n    }\r\n\r\n    setEasing() {\r\n        if (this.nextFrame.easeIn) {\r\n            this.easing = new BezierEasing(this.lastFrame.easeOut[0], this.lastFrame.easeOut[1], this.nextFrame.easeIn[0], this.nextFrame.easeIn[1]);\r\n        } else {\r\n            this.easing = null;\r\n        }\r\n    }\r\n\r\n    getValue(time) {\r\n        if (this.finished && time >= this.nextFrame.t) {\r\n            return this.nextFrame.v;\r\n        } else if (!this.started && time <= this.lastFrame.t) {\r\n            return this.lastFrame.v;\r\n        } else {\r\n            this.started = true;\r\n            this.finished = false;\r\n            if (time > this.nextFrame.t) {\r\n                if (this.pointer + 1 === this.frameCount) {\r\n                    this.finished = true;\r\n                } else {\r\n                    this.pointer++;\r\n                    this.lastFrame = this.frames[this.pointer - 1];\r\n                    this.nextFrame = this.frames[this.pointer];\r\n                    this.onKeyframeChange();\r\n                }\r\n            } else if (time < this.lastFrame.t) {\r\n                if (this.pointer < 2) {\r\n                    this.started = false;\r\n                } else {\r\n                    this.pointer--;\r\n                    this.lastFrame = this.frames[this.pointer - 1];\r\n                    this.nextFrame = this.frames[this.pointer];\r\n                    this.onKeyframeChange();\r\n                }\r\n            }\r\n            return this.getValueAtTime(time);\r\n        }\r\n    }\r\n\r\n    setKeyframes(time) {\r\n        //console.log(time, this.frames[this.frameCount - 2].t, this.frames[this.frameCount - 1].t);\r\n\r\n        if (time < this.frames[0].t) {\r\n            this.pointer = 1;\r\n            this.nextFrame = this.frames[this.pointer];\r\n            this.lastFrame = this.frames[this.pointer - 1];\r\n            this.onKeyframeChange();\r\n            return;\r\n        }\r\n\r\n        if (time > this.frames[this.frameCount - 1].t) {\r\n            this.pointer = this.frameCount - 1;\r\n            this.nextFrame = this.frames[this.pointer];\r\n            this.lastFrame = this.frames[this.pointer - 1];\r\n            this.onKeyframeChange();\r\n            return;\r\n        }\r\n\r\n        for (let i = 1; i < this.frameCount; i++) {\r\n            if (time >= this.frames[i - 1].t && time <= this.frames[i].t) {\r\n                this.pointer = i;\r\n                this.lastFrame = this.frames[i - 1];\r\n                this.nextFrame = this.frames[i];\r\n                this.onKeyframeChange();\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    onKeyframeChange() {\r\n        this.setEasing();\r\n    }\r\n\r\n    getElapsed(time) {\r\n        const delta = (time - this.lastFrame.t);\r\n        const duration = this.nextFrame.t - this.lastFrame.t;\r\n        let elapsed = delta / duration;\r\n\r\n        if (elapsed > 1) elapsed = 1;\r\n        else if (elapsed < 0) elapsed = 0;\r\n        else if (this.easing) elapsed = this.easing(elapsed);\r\n        return elapsed;\r\n    }\r\n\r\n    getValueAtTime(time) {\r\n        return this.lerp(this.lastFrame.v, this.nextFrame.v, this.getElapsed(time));\r\n    }\r\n\r\n    reset(reversed) {\r\n        this.finished = false;\r\n        this.started = false;\r\n        this.pointer = reversed ? this.frameCount - 1 : 1;\r\n        this.nextFrame = this.frames[this.pointer];\r\n        this.lastFrame = this.frames[this.pointer - 1];\r\n        this.onKeyframeChange();\r\n    }\r\n}\r\n\r\nexport default AnimatedProperty;","import Bezier from '../utils/Bezier';\r\nimport AnimatedProperty from '../property/AnimatedProperty';\r\n\r\nclass Position extends AnimatedProperty{\r\n\r\n    onKeyframeChange() {\r\n        this.setEasing();\r\n        this.setMotionPath();\r\n    }\r\n\r\n    getValueAtTime(time) {\r\n        if (this.motionpath) {\r\n            return this.motionpath.getValues(this.getElapsed(time));\r\n        } else {\r\n            return this.lerp(this.lastFrame.v, this.nextFrame.v, this.getElapsed(time));\r\n        }\r\n    }\r\n\r\n    setMotionPath() {\r\n        if (this.lastFrame.motionpath) {\r\n            this.motionpath = new Bezier(this.lastFrame.motionpath);\r\n            this.motionpath.getLength(this.lastFrame.len);\r\n        } else {\r\n            this.motionpath = null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Position;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import Property from '../property/Property';\r\nimport AnimatedProperty from '../property/AnimatedProperty';\r\nimport Position from './Position';\r\n\r\nclass Transform {\r\n\r\n    constructor(data) {\r\n        if (data.position) {\r\n            if (data.position.length > 1) {\r\n                this.position = new Position(data.position);\r\n            } else {\r\n                this.position = new Property(data.position);\r\n            }\r\n        }\r\n\r\n        if (data.positionX) this.positionX = data.positionX.length > 1 ? new AnimatedProperty(data.positionX) : new Property(data.positionX);\r\n        if (data.positionY) this.positionY = data.positionY.length > 1 ? new AnimatedProperty(data.positionY) : new Property(data.positionY);\r\n        if (data.anchor) this.anchor = data.anchor.length > 1 ? new AnimatedProperty(data.anchor) : new Property(data.anchor);\r\n        if (data.scaleX) this.scaleX = data.scaleX.length > 1 ? new AnimatedProperty(data.scaleX) : new Property(data.scaleX);\r\n        if (data.scaleY) this.scaleY = data.scaleY.length > 1 ? new AnimatedProperty(data.scaleY) : new Property(data.scaleY);\r\n        if (data.skew) this.skew = data.skew.length > 1 ? new AnimatedProperty(data.skew) : new Property(data.skew);\r\n        if (data.skewAxis) this.skewAxis = data.skewAxis.length > 1 ? new AnimatedProperty(data.skewAxis) : new Property(data.skewAxis);\r\n        if (data.rotation) this.rotation = data.rotation.length > 1 ? new AnimatedProperty(data.rotation) : new Property(data.rotation);\r\n        if (data.opacity) this.opacity = data.opacity.length > 1 ? new AnimatedProperty(data.opacity) : new Property(data.opacity);\r\n    }\r\n\r\n    update(ctx, time) {\r\n        let positionX; // FIXME wrong transparency if nested\r\n        let positionY;\r\n        const anchor = this.anchor ? this.anchor.getValue(time) : [0, 0];\r\n        const rotation = this.rotation ? this.deg2rad(this.rotation.getValue(time)) : 0;\r\n        const skew = this.skew ? this.deg2rad(this.skew.getValue(time)) : 0;\r\n        const skewAxis = this.skewAxis ? this.deg2rad(this.skewAxis.getValue(time)) : 0;\r\n        const scaleX = this.scaleX ? this.scaleX.getValue(time) : 1;\r\n        const scaleY = this.scaleY ? this.scaleY.getValue(time) : 1;\r\n        const opacity = this.opacity ? this.opacity.getValue(time) * ctx.globalAlpha : ctx.globalAlpha;\r\n\r\n        if (this.position) {\r\n            const position = this.position.getValue(time, ctx);\r\n            positionX = position[0];\r\n            positionY = position[1];\r\n        } else {\r\n            positionX = this.positionX ? this.positionX.getValue(time) : 0;\r\n            positionY = this.positionY ? this.positionY.getValue(time) : 0;\r\n        }\r\n\r\n        // console.log(ctx, positionX, positionY, anchor, rotation, skew, skewAxis, scaleX, scaleY, opacity);\r\n\r\n        //order very very important :)\r\n        ctx.transform(1, 0, 0, 1, positionX - anchor[0], positionY - anchor[1]);\r\n        this.setRotation(ctx, rotation, anchor[0], anchor[1]);\r\n        this.setSkew(ctx, skew, skewAxis, anchor[0], anchor[1]);\r\n        this.setScale(ctx, scaleX, scaleY, anchor[0], anchor[1]);\r\n        ctx.globalAlpha = opacity;\r\n    }\r\n\r\n    setRotation(ctx, rad, x, y) {\r\n        const c = Math.cos(rad);\r\n        const s = Math.sin(rad);\r\n        const dx = x - c * x + s * y;\r\n        const dy = y - s * x - c * y;\r\n        ctx.transform(c, s, -s, c, dx, dy);\r\n    }\r\n\r\n    setScale(ctx, sx, sy, x, y) {\r\n        ctx.transform(sx, 0, 0, sy, -x * sx + x, -y * sy + y);\r\n    }\r\n\r\n    setSkew(ctx, skew, axis, x, y) {\r\n        const t = Math.tan(-skew);\r\n        this.setRotation(ctx, -axis, x, y);\r\n        ctx.transform(1, 0, t, 1, -y * t, 0);\r\n        this.setRotation(ctx, axis, x, y);\r\n    }\r\n\r\n    deg2rad(deg) {\r\n        return deg * (Math.PI / 180);\r\n    }\r\n\r\n    setKeyframes(time) {\r\n        if (this.anchor) this.anchor.setKeyframes(time);\r\n        if (this.rotation) this.rotation.setKeyframes(time);\r\n        if (this.skew) this.skew.setKeyframes(time);\r\n        if (this.skewAxis) this.skewAxis.setKeyframes(time);\r\n        if (this.position) this.position.setKeyframes(time);\r\n        if (this.positionX) this.positionX.setKeyframes(time);\r\n        if (this.positionY) this.positionY.setKeyframes(time);\r\n        if (this.scaleX) this.scaleX.setKeyframes(time);\r\n        if (this.scaleY) this.scaleY.setKeyframes(time);\r\n        if (this.opacity) this.opacity.setKeyframes(time);\r\n    }\r\n\r\n    reset(reversed) {\r\n        if (this.anchor) this.anchor.reset(reversed);\r\n        if (this.rotation) this.rotation.reset(reversed);\r\n        if (this.skew) this.skew.reset(reversed);\r\n        if (this.skewAxis) this.skewAxis.reset(reversed);\r\n        if (this.position) this.position.reset(reversed);\r\n        if (this.positionX) this.positionX.reset(reversed);\r\n        if (this.positionY) this.positionY.reset(reversed);\r\n        if (this.scaleX) this.scaleX.reset(reversed);\r\n        if (this.scaleY) this.scaleY.reset(reversed);\r\n        if (this.opacity) this.opacity.reset(reversed);\r\n    }\r\n}\r\n\r\nexport default Transform;","import Property from '../property/Property';\r\nimport AnimatedProperty from '../property/AnimatedProperty';\r\n\r\nclass DropShadow {\r\n    constructor(data) {\r\n        this.color = data.color.length > 1 ? new AnimatedProperty(data.color) : new Property(data.color);\r\n        this.opacity = data.opacity.length > 1 ? new AnimatedProperty(data.opacity) : new Property(data.opacity);\r\n        this.direction = data.direction.length > 1 ? new AnimatedProperty(data.direction) : new Property(data.direction);\r\n        this.distance = data.distance.length > 1 ? new AnimatedProperty(data.distance) : new Property(data.distance);\r\n        this.softness = data.softness.length > 1 ? new AnimatedProperty(data.softness) : new Property(data.softness);\r\n    }\r\n\r\n    getColor(time) {\r\n        const color = this.color.getValue(time);\r\n        const opacity = this.opacity.getValue(time);\r\n        return `rgba(${Math.round(color[0])}, ${Math.round(color[1])}, ${Math.round(color[2])}, ${opacity})`;\r\n    }\r\n\r\n    setShadow(ctx, time) {\r\n        const color = this.getColor(time);\r\n        const dist = this.distance.getValue(time);\r\n        const blur = this.softness.getValue(time);\r\n        ctx.shadowColor = color;\r\n        ctx.shadowOffsetX = dist;\r\n        ctx.shadowOffsetY = dist;\r\n        ctx.shadowBlur = blur;\r\n    }\r\n\r\n    setKeyframes(time) {\r\n        this.color.setKeyframes(time);\r\n        this.opacity.setKeyframes(time);\r\n        this.direction.setKeyframes(time);\r\n        this.distance.setKeyframes(time);\r\n        this.softness.setKeyframes(time);\r\n    }\r\n\r\n    reset(reversed) {\r\n        this.color.reset(reversed);\r\n        this.opacity.reset(reversed);\r\n        this.direction.reset(reversed);\r\n        this.distance.reset(reversed);\r\n        this.softness.reset(reversed);\r\n    }\r\n}\r\n\r\nexport default DropShadow;","import Path from '../objects/Path';\r\nimport AnimatedPath from '../objects/AnimatedPath';\r\nimport Transform from '../transform/Transform';\r\nimport DropShadow from '../effects/DropShadow';\r\n\r\nclass BaseLayer {\r\n\r\n    constructor(data) {\r\n        this.index = data.index;\r\n        this.in = data.in || 0;\r\n        this.out = data.out;\r\n        if (data.parent) this.parent = data.parent;\r\n        this.transform = new Transform(data.transform);\r\n\r\n        if (data.effects) {\r\n            if (data.effects.dropShadow) {\r\n                this.dropShadow = new DropShadow(data.effects.dropShadow);\r\n            }\r\n        }\r\n\r\n        if (data.masks) {\r\n            this.masks = data.masks.map(mask => mask.isAnimated ? new AnimatedPath(mask) : new Path(mask));\r\n        }\r\n    }\r\n\r\n    draw(ctx, time) {\r\n        ctx.save();\r\n\r\n        if (this.parent) this.parent.setParentTransform(ctx, time);\r\n        this.transform.update(ctx, time);\r\n\r\n        if (this.dropShadow) {\r\n            this.dropShadow.setShadow(ctx, time);\r\n        }\r\n\r\n        if (this.masks) {\r\n            ctx.beginPath();\r\n            this.masks.forEach(mask => mask.draw(ctx, time));\r\n            ctx.clip();\r\n        }\r\n    }\r\n\r\n    setParentTransform(ctx, time) {\r\n        if (this.parent) this.parent.setParentTransform(ctx, time);\r\n        this.transform.update(ctx, time);\r\n    }\r\n\r\n    setKeyframes(time) {\r\n        this.transform.setKeyframes(time);\r\n        if (this.masks) this.masks.forEach(mask => mask.setKeyframes(time));\r\n    }\r\n\r\n    reset(reversed) {\r\n        this.transform.reset(reversed);\r\n        if (this.masks) this.masks.forEach(mask => mask.reset(reversed));\r\n    }\r\n}\r\n\r\nexport default BaseLayer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import BaseLayer from './BaseLayer';\r\n\r\nclass ImageLayer extends BaseLayer {\r\n    constructor(data) {\r\n        super(data);\r\n        this.source = data.source;\r\n        this.isLoaded = false;\r\n    }\r\n\r\n    preload(cb) {\r\n        return new Promise((resolve, reject) => {\r\n            this.img = new Image;\r\n            this.img.onload = () => {\r\n                this.isLoaded = true;\r\n                resolve();\r\n            };\r\n            this.img.src = this.source;\r\n        });\r\n    }\r\n\r\n    draw(ctx, time) {\r\n        super.draw(ctx, time);\r\n\r\n        ctx.drawImage(this.img, 0, 0);\r\n\r\n        ctx.restore();\r\n    }\r\n}\r\n\r\nexport default ImageLayer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import BaseLayer from './BaseLayer';\r\n\r\nclass NullLayer extends BaseLayer {\r\n    constructor(data) {\r\n        super(data);\r\n    }\r\n\r\n    draw(ctx, time) {\r\n        super.draw(ctx, time);\r\n        ctx.restore();\r\n    }\r\n}\r\n\r\nexport default NullLayer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import BaseLayer from './BaseLayer'\r\n\r\nclass TextLayer extends BaseLayer {\r\n    constructor(data, baseFont) {\r\n        super(data);\r\n        this.text = data.text;\r\n        this.leading = data.leading;\r\n        this.fontSize = data.fontSize;\r\n        this.font = data.font;\r\n        this.color = data.color;\r\n        this.justification = data.justification;\r\n        this.baseFont = baseFont;\r\n    }\r\n\r\n    draw(ctx, time) {\r\n        super.draw(ctx, time);\r\n\r\n        ctx.textAlign = this.justification;\r\n        ctx.font = `${this.fontSize}px ${this.baseFont}` || this.font;\r\n        ctx.fillStyle = `rgb(${this.color[0]}, ${this.color[1]}, ${this.color[2]})`;\r\n        for (let j = 0; j < this.text.length; j++) {\r\n            ctx.fillText(this.text[j], 0, j * this.leading);\r\n        }\r\n\r\n        ctx.restore();\r\n    }\r\n\r\n}\r\n\r\nexport default TextLayer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import Property from '../property/Property'\r\nimport AnimatedProperty from '../property/AnimatedProperty'\r\nimport Path from './Path'\r\n\r\nclass Ellipse extends Path {\r\n\r\n    constructor(data) {\r\n        super(data)\r\n        this.closed = true;\r\n        this.size = data.size.length > 1 ? new AnimatedProperty(data.size) : new Property(data.size);\r\n        if (data.position) this.position = data.position.length > 1 ? new AnimatedProperty(data.position) : new Property(data.position);\r\n    }\r\n\r\n    draw(ctx, time, trim) {\r\n        const size = this.size.getValue(time);\r\n        const position = this.position ? this.position.getValue(time) : [0, 0];\r\n\r\n        let i;\r\n        let j;\r\n        const w = size[0] / 2;\r\n        const h = size[1] / 2;\r\n        const x = position[0] - w;\r\n        const y = position[1] - h;\r\n        const ow = w * .5522848;\r\n        const oh = h * .5522848;\r\n\r\n        const vertices = [\r\n            [x + w + ow, y, x + w - ow, y, x + w, y],\r\n            [x + w + w, y + h + oh, x + w + w, y + h - oh, x + w + w, y + h],\r\n            [x + w - ow, y + h + h, x + w + ow, y + h + h, x + w, y + h + h],\r\n            [x, y + h - oh, x, y + h + oh, x, y + h]\r\n        ];\r\n\r\n        if (trim) {\r\n            let tv;\r\n            const len = w + h;\r\n\r\n            trim = this.getTrimValues(trim);\r\n\r\n            for (i = 0; i < 4; i++) {\r\n                j = i + 1;\r\n                if (j > 3) j = 0;\r\n                if (i > trim.startIndex && i < trim.endIndex) {\r\n                    ctx.bezierCurveTo(vertices[i][0], vertices[i][1], vertices[j][2], vertices[j][3], vertices[j][4], vertices[j][5]);\r\n                } else if (i === trim.startIndex && i === trim.endIndex) {\r\n                    tv = this.trim(vertices[i], vertices[j], trim.start, trim.end, len);\r\n                    ctx.moveTo(tv.start[4], tv.start[5]);\r\n                    ctx.bezierCurveTo(tv.start[0], tv.start[1], tv.end[2], tv.end[3], tv.end[4], tv.end[5]);\r\n                } else if (i === trim.startIndex) {\r\n                    tv = this.trim(vertices[i], vertices[j], trim.start, 1, len);\r\n                    ctx.moveTo(tv.start[4], tv.start[5]);\r\n                    ctx.bezierCurveTo(tv.start[0], tv.start[1], tv.end[2], tv.end[3], tv.end[4], tv.end[5]);\r\n                } else if (i === trim.endIndex) {\r\n                    tv = this.trim(vertices[i], vertices[j], 0, trim.end, len);\r\n                    ctx.bezierCurveTo(tv.start[0], tv.start[1], tv.end[2], tv.end[3], tv.end[4], tv.end[5]);\r\n                }\r\n            }\r\n        } else {\r\n            ctx.moveTo(vertices[0][4], vertices[0][5]);\r\n            for (i = 0; i < 4; i++) {\r\n                j = i + 1;\r\n                if (j > 3) j = 0;\r\n                ctx.bezierCurveTo(vertices[i][0], vertices[i][1], vertices[j][2], vertices[j][3], vertices[j][4], vertices[j][5]);\r\n            }\r\n        }\r\n    }\r\n\r\n    getTrimValues(trim) {\r\n        const startIndex = Math.floor(trim.start * 4);\r\n        const endIndex = Math.floor(trim.end * 4);\r\n        const start = (trim.start - startIndex * 0.25) * 4;\r\n        const end = (trim.end - endIndex * 0.25) * 4;\r\n\r\n        return {\r\n            startIndex,\r\n            endIndex,\r\n            start,\r\n            end\r\n        };\r\n    }\r\n\r\n    setKeyframes(time) {\r\n        this.size.setKeyframes(time);\r\n        if (this.position) this.position.setKeyframes(time);\r\n    }\r\n\r\n    reset(reversed) {\r\n        this.size.reset(reversed);\r\n        if (this.position) this.position.reset(reversed);\r\n    }\r\n}\r\n\r\nexport default Ellipse;","import Property from '../property/Property';\r\nimport AnimatedProperty from '../property/AnimatedProperty';\r\n\r\nclass Polystar {\r\n\r\n    constructor(data) {\r\n        //this.name = data.name;\r\n        this.closed = true; // TODO ??\r\n\r\n        this.starType = data.starType;\r\n        this.points = data.points.length > 1 ? new AnimatedProperty(data.points) : new Property(data.points);\r\n        this.innerRadius = data.innerRadius.length > 1 ? new AnimatedProperty(data.innerRadius) : new Property(data.innerRadius);\r\n        this.outerRadius = data.outerRadius.length > 1 ? new AnimatedProperty(data.outerRadius) : new Property(data.outerRadius);\r\n        if (data.position) this.position = data.position.length > 1 ? new AnimatedProperty(data.position) : new Property(data.position);\r\n        if (data.rotation) this.rotation = data.rotation.length > 1 ? new AnimatedProperty(data.rotation) : new Property(data.rotation);\r\n        if (data.innerRoundness) this.innerRoundness = data.innerRoundness.length > 1 ? new AnimatedProperty(data.innerRoundness) : new Property(data.innerRoundness);\r\n        if (data.outerRoundness) this.outerRoundness = data.outerRoundness.length > 1 ? new AnimatedProperty(data.outerRoundness) : new Property(data.outerRoundness);\r\n    }\r\n\r\n    draw(ctx, time) {\r\n        const points = this.points.getValue(time);\r\n        const innerRadius = this.innerRadius.getValue(time);\r\n        const outerRadius = this.outerRadius.getValue(time);\r\n        const position = this.position ? this.position.getValue(time) : [0, 0];\r\n        let rotation = this.rotation ? this.rotation.getValue(time) : 0;\r\n        const innerRoundness = this.innerRoundness ? this.innerRoundness.getValue(time) : 0;\r\n        const outerRoundness = this.outerRoundness ? this.outerRoundness.getValue(time) : 0;\r\n\r\n        rotation = this.deg2rad(rotation);\r\n        const start = this.rotatePoint(0, 0, 0, 0 - outerRadius, rotation);\r\n\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.translate(position[0], position[1]);\r\n        ctx.moveTo(start[0], start[1]);\r\n\r\n        for (let i = 0; i < points; i++) {\r\n            let pInner;\r\n            let pOuter;\r\n            let pOuter1Tangent;\r\n            let pOuter2Tangent;\r\n            let pInner1Tangent;\r\n            let pInner2Tangent;\r\n            let outerOffset;\r\n            let innerOffset;\r\n            let rot;\r\n\r\n            rot = Math.PI / points * 2;\r\n\r\n            pInner = this.rotatePoint(0, 0, 0, 0 - innerRadius, (rot * (i + 1) - rot / 2) + rotation);\r\n            pOuter = this.rotatePoint(0, 0, 0, 0 - outerRadius, (rot * (i + 1)) + rotation);\r\n\r\n            //FIxME\r\n            if (!outerOffset) outerOffset = (start[0] + pInner[0]) * outerRoundness / 100 * .5522848;\r\n            if (!innerOffset) innerOffset = (start[0] + pInner[0]) * innerRoundness / 100 * .5522848;\r\n\r\n            pOuter1Tangent = this.rotatePoint(0, 0, outerOffset, 0 - outerRadius, (rot * i) + rotation);\r\n            pInner1Tangent = this.rotatePoint(0, 0, innerOffset * -1, 0 - innerRadius, (rot * (i + 1) - rot / 2) + rotation);\r\n            pInner2Tangent = this.rotatePoint(0, 0, innerOffset, 0 - innerRadius, (rot * (i + 1) - rot / 2) + rotation);\r\n            pOuter2Tangent = this.rotatePoint(0, 0, outerOffset * -1, 0 - outerRadius, (rot * (i + 1)) + rotation);\r\n\r\n            if (this.starType === 1) {\r\n                //star\r\n                ctx.bezierCurveTo(pOuter1Tangent[0], pOuter1Tangent[1], pInner1Tangent[0], pInner1Tangent[1], pInner[0], pInner[1]);\r\n                ctx.bezierCurveTo(pInner2Tangent[0], pInner2Tangent[1], pOuter2Tangent[0], pOuter2Tangent[1], pOuter[0], pOuter[1]);\r\n            } else {\r\n                //polygon\r\n                ctx.bezierCurveTo(pOuter1Tangent[0], pOuter1Tangent[1], pOuter2Tangent[0], pOuter2Tangent[1], pOuter[0], pOuter[1]);\r\n            }\r\n\r\n            //debug\r\n            //ctx.fillStyle = \"black\";\r\n            //ctx.fillRect(pInner[0], pInner[1], 5, 5);\r\n            //ctx.fillRect(pOuter[0], pOuter[1], 5, 5);\r\n            //ctx.fillStyle = \"blue\";\r\n            //ctx.fillRect(pOuter1Tangent[0], pOuter1Tangent[1], 5, 5);\r\n            //ctx.fillStyle = \"red\";\r\n            //ctx.fillRect(pInner1Tangent[0], pInner1Tangent[1], 5, 5);\r\n            //ctx.fillStyle = \"green\";\r\n            //ctx.fillRect(pInner2Tangent[0], pInner2Tangent[1], 5, 5);\r\n            //ctx.fillStyle = \"brown\";\r\n            //ctx.fillRect(pOuter2Tangent[0], pOuter2Tangent[1], 5, 5);\r\n        }\r\n\r\n        ctx.restore();\r\n    }\r\n\r\n    rotatePoint(cx, cy, x, y, radians) {\r\n        const cos = Math.cos(radians);\r\n        const sin = Math.sin(radians);\r\n        const nx = (cos * (x - cx)) - (sin * (y - cy)) + cx;\r\n        const ny = (sin * (x - cx)) + (cos * (y - cy)) + cy;\r\n        return [nx, ny];\r\n    }\r\n\r\n    deg2rad(deg) {\r\n        return deg * (Math.PI / 180);\r\n    }\r\n\r\n    setKeyframes(time) {\r\n        this.points.setKeyframes(time);\r\n        this.innerRadius.setKeyframes(time);\r\n        this.outerRadius.setKeyframes(time);\r\n        if (this.position) this.position.setKeyframes(time);\r\n        if (this.rotation) this.rotation.setKeyframes(time);\r\n        if (this.innerRoundness) this.innerRoundness.setKeyframes(time);\r\n        if (this.outerRoundness) this.outerRoundness.setKeyframes(time);\r\n    }\r\n\r\n    reset(reversed) {\r\n        this.points.reset(reversed);\r\n        this.innerRadius.reset(reversed);\r\n        this.outerRadius.reset(reversed);\r\n        if (this.position) this.position.reset(reversed);\r\n        if (this.rotation) this.rotation.reset(reversed);\r\n        if (this.innerRoundness) this.innerRoundness.reset(reversed);\r\n        if (this.outerRoundness) this.outerRoundness.reset(reversed);\r\n    }\r\n}\r\n\r\nexport default Polystar;","import Property from '../property/Property';\r\nimport AnimatedProperty from '../property/AnimatedProperty';\r\n\r\nclass Rect {\r\n\r\n    constructor(data) {\r\n        //this.name = data.name;\r\n        this.closed = true;\r\n\r\n        this.size = data.size.length > 1 ? new AnimatedProperty(data.size) : new Property(data.size);\r\n\r\n        //optionals\r\n        if (data.position) this.position = data.position.length > 1 ? new AnimatedProperty(data.position) : new Property(data.position);\r\n        if (data.roundness) this.roundness = data.roundness.length > 1 ? new AnimatedProperty(data.roundness) : new Property(data.roundness);\r\n    }\r\n\r\n    draw(ctx, time, trim) {\r\n        const size = this.size.getValue(time);\r\n        const position = this.position ? this.position.getValue(time) : [0, 0];\r\n        let roundness = this.roundness ? this.roundness.getValue(time) : 0;\r\n\r\n        if (size[0] < 2 * roundness) roundness = size[0] / 2;\r\n        if (size[1] < 2 * roundness) roundness = size[1] / 2;\r\n\r\n        const x = position[0] - size[0] / 2;\r\n        const y = position[1] - size[1] / 2;\r\n\r\n        if (trim) {\r\n            // let tv;\r\n            // trim = this.getTrimValues(trim);\r\n            //TODO add trim\r\n        } else {\r\n            ctx.moveTo(x + roundness, y);\r\n            ctx.arcTo(x + size[0], y, x + size[0], y + size[1], roundness);\r\n            ctx.arcTo(x + size[0], y + size[1], x, y + size[1], roundness);\r\n            ctx.arcTo(x, y + size[1], x, y, roundness);\r\n            ctx.arcTo(x, y, x + size[0], y, roundness);\r\n        }\r\n    }\r\n\r\n    setKeyframes(time) {\r\n        this.size.setKeyframes(time);\r\n        if (this.position) this.position.setKeyframes(time);\r\n        if (this.roundness) this.roundness.setKeyframes(time);\r\n    }\r\n\r\n    reset(reversed) {\r\n        this.size.reset(reversed);\r\n        if (this.position) this.position.reset(reversed);\r\n        if (this.roundness) this.roundness.reset(reversed);\r\n    }\r\n}\r\n\r\nexport default Rect;","import Property from './Property';\r\nimport AnimatedProperty from './AnimatedProperty';\r\n\r\nclass Fill {\r\n\r\n    constructor(data) {\r\n        this.color = data.color.length > 1 ? new AnimatedProperty(data.color) : new Property(data.color);\r\n        if (data.opacity) this.opacity = data.opacity.length > 1 ? new AnimatedProperty(data.opacity) : new Property(data.opacity);\r\n    }\r\n\r\n    getValue(time) {\r\n        const color = this.color.getValue(time);\r\n        const opacity = this.opacity ? this.opacity.getValue(time) : 1;\r\n        return `rgba(${Math.round(color[0])}, ${Math.round(color[1])}, ${Math.round(color[2])}, ${opacity})`;\r\n    }\r\n\r\n    update(ctx, time) {\r\n        const color = this.getValue(time);\r\n        ctx.fillStyle = color;\r\n    }\r\n\r\n    setKeyframes(time) {\r\n        this.color.setKeyframes(time);\r\n        if (this.opacity) this.opacity.setKeyframes(time);\r\n    }\r\n\r\n    reset(reversed) {\r\n        this.color.reset(reversed);\r\n        if (this.opacity) this.opacity.reset(reversed);\r\n    }\r\n}\r\n\r\nexport default Fill;","import Property from './Property';\r\nimport AnimatedProperty from './AnimatedProperty';\r\n\r\nclass GradientFill {\r\n\r\n    constructor(data, gradients) {\r\n        if (!gradients[data.name]) gradients[data.name] = [];\r\n        gradients[data.name].push(this);\r\n\r\n        this.stops = data.stops;\r\n        this.type = data.type;\r\n        this.startPoint = data.startPoint.length > 1 ? new AnimatedProperty(data.startPoint) : new Property(data.startPoint);\r\n        this.endPoint = data.endPoint.length > 1 ? new AnimatedProperty(data.endPoint) : new Property(data.endPoint);\r\n        if (data.opacity) this.opacity = data.opacity.length > 1 ? new AnimatedProperty(data.opacity) : new Property(data.opacity);\r\n    }\r\n\r\n    update(ctx, time) {\r\n        const startPoint = this.startPoint.getValue(time);\r\n        const endPoint = this.endPoint.getValue(time);\r\n        let radius = 0;\r\n\r\n        if (this.type === 'radial') {\r\n            const distX = startPoint[0] - endPoint[0];\r\n            const distY = startPoint[1] - endPoint[1];\r\n            radius = Math.sqrt(distX * distX + distY * distY);\r\n        }\r\n\r\n        const gradient = this.type === 'radial' ?\r\n            ctx.createRadialGradient(startPoint[0], startPoint[1], 0, startPoint[0], startPoint[1], radius) :\r\n            ctx.createLinearGradient(startPoint[0], startPoint[1], endPoint[0], endPoint[1]);\r\n\r\n        const opacity = this.opacity ? this.opacity.getValue(time) : 1;\r\n\r\n        for (const stop of this.stops) {\r\n            const color = stop.color;\r\n            gradient.addColorStop(stop.location, `rgba(${color[0]}, ${color[1]}, ${color[2]}, ${color[3] * opacity})`);\r\n        }\r\n\r\n        ctx.fillStyle = gradient;\r\n    }\r\n\r\n    setKeyframes(time) {\r\n        if (this.opacity) this.opacity.setKeyframes(time);\r\n        this.startPoint.setKeyframes(time);\r\n        this.endPoint.setKeyframes(time);\r\n    }\r\n\r\n    reset(reversed) {\r\n        if (this.opacity) this.opacity.setKeyframes(reversed);\r\n        this.startPoint.setKeyframes(reversed);\r\n        this.endPoint.setKeyframes(reversed);\r\n    }\r\n}\r\n\r\nexport default GradientFill;","import Property from './Property';\r\nimport AnimatedProperty from './AnimatedProperty';\r\n\r\nclass Stroke {\r\n\r\n    constructor(data) {\r\n        if (data) {\r\n            this.join = data.join;\r\n            this.cap = data.cap;\r\n\r\n            if (data.miterLimit) {\r\n                if (data.miterLimit.length > 1) this.miterLimit = new AnimatedProperty(data.miterLimit);\r\n                else this.miterLimit = new Property(data.miterLimit);\r\n            }\r\n\r\n            if (data.color.length > 1) this.color = new AnimatedProperty(data.color);\r\n            else this.color = new Property(data.color);\r\n\r\n            if (data.opacity.length > 1) this.opacity = new AnimatedProperty(data.opacity);\r\n            else this.opacity = new Property(data.opacity);\r\n\r\n            if (data.width.length > 1) this.width = new AnimatedProperty(data.width);\r\n            else this.width = new Property(data.width);\r\n\r\n            if (data.dashes) {\r\n                this.dashes = {};\r\n\r\n                if (data.dashes.dash.length > 1) this.dashes.dash = new AnimatedProperty(data.dashes.dash);\r\n                else this.dashes.dash = new Property(data.dashes.dash);\r\n\r\n                if (data.dashes.gap.length > 1) this.dashes.gap = new AnimatedProperty(data.dashes.gap);\r\n                else this.dashes.gap = new Property(data.dashes.gap);\r\n\r\n                if (data.dashes.offset.length > 1) this.dashes.offset = new AnimatedProperty(data.dashes.offset);\r\n                else this.dashes.offset = new Property(data.dashes.offset);\r\n            }\r\n        }\r\n    }\r\n\r\n    getValue(time) {\r\n        const color = this.color.getValue(time);\r\n        const opacity = this.opacity.getValue(time);\r\n        color[0] = Math.round(color[0]);\r\n        color[1] = Math.round(color[1]);\r\n        color[2] = Math.round(color[2]);\r\n        const s = color.join(', ');\r\n\r\n        return `rgba(${s}, ${opacity})`;\r\n    }\r\n\r\n    update(ctx, time) {\r\n        const strokeColor = this.getValue(time);\r\n        const strokeWidth = this.width.getValue(time);\r\n        const strokeJoin = this.join;\r\n        let miterLimit;\r\n        if (strokeJoin === 'miter') miterLimit = this.miterLimit.getValue(time);\r\n\r\n        ctx.lineWidth = strokeWidth;\r\n        ctx.lineJoin = strokeJoin;\r\n        if (miterLimit) ctx.miterLimit = miterLimit;\r\n        ctx.lineCap = this.cap;\r\n        ctx.strokeStyle = strokeColor;\r\n\r\n        if (this.dashes) {\r\n            ctx.setLineDash([\r\n                this.dashes.dash.getValue(time),\r\n                this.dashes.gap.getValue(time)\r\n            ]);\r\n            ctx.lineDashOffset = this.dashes.offset.getValue(time);\r\n        }\r\n    }\r\n\r\n    setKeyframes(time) {\r\n        this.color.setKeyframes(time);\r\n        this.opacity.setKeyframes(time);\r\n        this.width.setKeyframes(time);\r\n        if (this.miterLimit) this.miterLimit.setKeyframes(time);\r\n        if (this.dashes) {\r\n            this.dashes.dash.setKeyframes(time);\r\n            this.dashes.gap.setKeyframes(time);\r\n            this.dashes.offset.setKeyframes(time);\r\n        }\r\n    }\r\n\r\n    reset(reversed) {\r\n        this.color.reset(reversed);\r\n        this.opacity.reset(reversed);\r\n        this.width.reset(reversed);\r\n        if (this.miterLimit) this.miterLimit.reset(reversed);\r\n        if (this.dashes) {\r\n            this.dashes.dash.reset(reversed);\r\n            this.dashes.gap.reset(reversed);\r\n            this.dashes.offset.reset(reversed);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Stroke;","import Property from './Property'\r\nimport AnimatedProperty from './AnimatedProperty'\r\n\r\nclass Trim {\r\n    constructor(data) {\r\n\r\n        this.type = data.type\r\n\r\n        if (data.start) this.start = data.start.length > 1 ? new AnimatedProperty(data.start) : new Property(data.start)\r\n        if (data.end) this.end = data.end.length > 1 ? new AnimatedProperty(data.end) : new Property(data.end)\r\n        if (data.offset) this.offset = data.offset.length > 1 ? new AnimatedProperty(data.offset) : new Property(data.offset)\r\n    }\r\n\r\n    getTrim(time) {\r\n        const startValue = this.start ? this.start.getValue(time) : 0\r\n        const endValue = this.end ? this.end.getValue(time) : 1\r\n\r\n        let start = Math.min(startValue, endValue)\r\n        let end = Math.max(startValue, endValue)\r\n\r\n        if (this.offset) {\r\n            const offset = this.offset.getValue(time) % 1\r\n            if ((offset > 0 && offset < 1) ||\r\n                (offset > -1 && offset < 0)) {\r\n\r\n                start += offset\r\n                end += offset\r\n                start = start > 1 ? start - 1 : start\r\n                start = start < 0 ? 1 + start : start\r\n                end = end > 1 ? end - 1 : end\r\n                end = end < 0 ? 1 + end : end\r\n            }\r\n        }\r\n\r\n        if (start === 0 && end === 1) {\r\n            return null\r\n        } else {\r\n            return {start, end}\r\n        }\r\n    }\r\n\r\n    setKeyframes(time) {\r\n        if (this.start) this.start.setKeyframes(time)\r\n        if (this.end) this.end.setKeyframes(time)\r\n        if (this.offset) this.offset.reset()\r\n    }\r\n\r\n    reset(reversed) {\r\n        if (this.start) this.start.reset(reversed)\r\n        if (this.end) this.end.reset(reversed)\r\n        if (this.offset) this.offset.reset()\r\n    }\r\n}\r\n\r\nexport default Trim\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import AnimatedPath from '../objects/AnimatedPath'\r\nimport Ellipse from '../objects/Ellipse'\r\nimport Path from '../objects/Path'\r\nimport Polystar from '../objects/Polystar'\r\nimport Rect from '../objects/Rect'\r\nimport Fill from '../property/Fill'\r\nimport GradientFill from '../property/GradientFill'\r\nimport Stroke from '../property/Stroke'\r\nimport Trim from '../property/Trim'\r\nimport BaseLayer from './BaseLayer'\r\n\r\nclass VectorLayer extends BaseLayer {\r\n    constructor(data, gradients) {\r\n        super(data)\r\n\r\n        if (data.fill) this.fill = new Fill(data.fill)\r\n        if (data.gradientFill) this.fill = new GradientFill(data.gradientFill, gradients)\r\n        if (data.stroke) this.stroke = new Stroke(data.stroke)\r\n        if (data.trim) this.trim = new Trim(data.trim)\r\n\r\n        if (data.groups) {\r\n            this.groups = data.groups.map(group => new VectorLayer(group, gradients))\r\n        }\r\n\r\n        if (data.shapes) {\r\n            this.shapes = data.shapes.map(shape => {\r\n                if (shape.type === 'path') {\r\n                    return shape.isAnimated ? new AnimatedPath(shape) : new Path(shape)\r\n                } else if (shape.type === 'rect') {\r\n                    return new Rect(shape)\r\n                } else if (shape.type === 'ellipse') {\r\n                    return new Ellipse(shape)\r\n                } else if (shape.type === 'polystar') {\r\n                    return new Polystar(shape)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    draw(ctx, time, parentFill, parentStroke, parentTrim) {\r\n        super.draw(ctx, time)\r\n\r\n        const fill = this.fill || parentFill\r\n        const stroke = this.stroke || parentStroke\r\n        const trimValues = this.trim ? this.trim.getTrim(time) : parentTrim\r\n\r\n        if (fill) fill.update(ctx, time)\r\n        if (stroke) stroke.update(ctx, time)\r\n\r\n        ctx.beginPath()\r\n        if (this.shapes) {\r\n            this.shapes.forEach(shape => shape.draw(ctx, time, trimValues))\r\n            if (this.shapes[this.shapes.length - 1].closed) {\r\n                // ctx.closePath();\r\n            }\r\n        }\r\n\r\n        if (fill) ctx.fill()\r\n        if (stroke) ctx.stroke()\r\n\r\n        if (this.groups) this.groups.forEach(group => group.draw(ctx, time, fill, stroke, trimValues))\r\n        ctx.restore()\r\n    }\r\n\r\n    setKeyframes(time) {\r\n        super.setKeyframes(time)\r\n\r\n        if (this.shapes) this.shapes.forEach(shape => shape.setKeyframes(time))\r\n        if (this.groups) this.groups.forEach(group => group.setKeyframes(time))\r\n\r\n        if (this.fill) this.fill.setKeyframes(time)\r\n        if (this.stroke) this.stroke.setKeyframes(time)\r\n        if (this.trim) this.trim.setKeyframes(time)\r\n    }\r\n\r\n    reset(reversed) {\r\n        super.reset(reversed)\r\n\r\n        if (this.shapes) this.shapes.forEach(shape => shape.reset(reversed))\r\n        if (this.groups) this.groups.forEach(group => group.reset(reversed))\r\n\r\n        if (this.fill) this.fill.reset(reversed)\r\n        if (this.stroke) this.stroke.reset(reversed)\r\n        if (this.trim) this.trim.reset(reversed)\r\n    }\r\n}\r\n\r\nexport default VectorLayer\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import ImageLayer from './ImageLayer'\r\nimport NullLayer from './NullLayer'\r\nimport TextLayer from './TextLayer'\r\nimport BaseLayer from './BaseLayer'\r\nimport VectorLayer from './VectorLayer'\r\nimport Property from '../property/Property'\r\nimport AnimatedProperty from '../property/AnimatedProperty'\r\n\r\nclass CompLayer extends BaseLayer {\r\n\r\n    constructor(data, comps, baseFont, gradients, imageBasePath) {\r\n        super(data)\r\n\r\n        const sourceID = data.sourceID\r\n        const layers = (comps && comps[sourceID]) ? comps[sourceID].layers : null\r\n\r\n        if (layers) {\r\n\r\n            this.layers = layers.map(layer => {\r\n                switch (layer.type) {\r\n                    case 'vector':\r\n                        return new VectorLayer(layer, gradients)\r\n                    case 'image':\r\n                        return new ImageLayer(layer, imageBasePath)\r\n                    case 'text':\r\n                        return new TextLayer(layer, baseFont)\r\n                    case 'comp':\r\n                        return new CompLayer(layer, baseFont, gradients, imageBasePath)\r\n                    case 'null':\r\n                        return new NullLayer(layer)\r\n                }\r\n            })\r\n\r\n            this.layers.forEach(layer => {\r\n                if (layer.parent) {\r\n                    const parentIndex = layer.parent\r\n                    layer.parent = this.layers.find(layer => layer.index === parentIndex)\r\n                }\r\n            })\r\n        }\r\n\r\n        if (data.timeRemapping) {\r\n            this.timeRemapping = data.timeRemapping.length > 1 ? new AnimatedProperty(data.timeRemapping) : new Property(data.timeRemapping)\r\n        }\r\n    }\r\n\r\n    draw(ctx, time) {\r\n        super.draw(ctx, time)\r\n\r\n        if (this.layers) {\r\n            let internalTime = time - this.in\r\n            if (this.timeRemapping) internalTime = this.timeRemapping.getValue(internalTime)\r\n            this.layers.forEach(layer => {\r\n                if (internalTime >= layer.in && internalTime <= layer.out) {\r\n                    layer.draw(ctx, internalTime)\r\n                }\r\n            })\r\n        }\r\n\r\n        ctx.restore()\r\n    }\r\n\r\n    setParentTransform(ctx, time) {\r\n        super.setParentTransform(ctx, time)\r\n        const internalTime = time - this.in\r\n        if (this.layers) this.layers.forEach(layer => layer.setParentTransform(ctx, internalTime))\r\n    }\r\n\r\n    setKeyframes(time) {\r\n        super.setKeyframes(time)\r\n        const internalTime = time - this.in\r\n        if (this.timeRemapping) this.timeRemapping.setKeyframes(internalTime)\r\n        if (this.layers) this.layers.forEach(layer => layer.setKeyframes(internalTime))\r\n    }\r\n\r\n    reset(reversed) {\r\n        super.reset(reversed)\r\n        if (this.timeRemapping) this.timeRemapping.reset(reversed)\r\n        if (this.layers) this.layers.forEach(layer => layer.reset(reversed))\r\n    }\r\n}\r\n\r\nexport default CompLayer\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {add, remove} from './core'\r\nimport Emitter from 'tiny-emitter'\r\nimport ImageLayer from './layers/ImageLayer'\r\nimport NullLayer from './layers/NullLayer'\r\nimport TextLayer from './layers/TextLayer'\r\nimport CompLayer from './layers/CompLayer'\r\nimport VectorLayer from './layers/VectorLayer'\r\n\r\nclass Animation extends Emitter {\r\n\r\n    constructor(options) {\r\n        super();\r\n\r\n        this.gradients = {};\r\n        this.pausedTime = 0;\r\n        this.duration = options.data.duration;\r\n        this.baseWidth = options.data.width;\r\n        this.baseHeight = options.data.height;\r\n        this.ratio = options.data.width / options.data.height;\r\n        this.markers = options.data.markers;\r\n        this.baseFont = options.baseFont;\r\n        this.loop = options.loop || false;\r\n        this.devicePixelRatio = options.devicePixelRatio || (typeof window !== 'undefined' && window.devicePixelRatio ? window.devicePixelRatio : 1)\r\n        this.fluid = options.fluid || true;\r\n        this.imageBasePath = options.imageBasePath || '';\r\n        const comps = options.data.comps;\r\n\r\n        this.isPaused = false;\r\n        this.isPlaying = false;\r\n        this.drawFrame = true;\r\n\r\n        this.canvas = options.canvas || document.createElement('canvas');\r\n        this.canvas.width = this.baseWidth;\r\n        this.canvas.height = this.baseHeight;\r\n        this.ctx = this.canvas.getContext('2d');\r\n\r\n        this.layers = options.data.layers.map(layer => {\r\n            switch (layer.type) {\r\n                case 'vector':\r\n                    return new VectorLayer(layer, this.gradients);\r\n                case 'image':\r\n                    return new ImageLayer(layer, this.imageBasePath);\r\n                case 'text':\r\n                    return new TextLayer(layer, this.baseFont);\r\n                case 'comp':\r\n                    return new CompLayer(layer, comps, this.baseFont, this.gradients, this.imageBasePath);\r\n                case 'null':\r\n                default :\r\n                    return new NullLayer(layer);\r\n            }\r\n        });\r\n\r\n        this.layers.forEach(layer => {\r\n            if (layer.parent) {\r\n                const parentIndex = layer.parent;\r\n                layer.parent = this.layers.find(layer => layer.index === parentIndex)\r\n            }\r\n        });\r\n\r\n        this.reversed = options.reversed || false;\r\n        this.reset(this.reversed);\r\n        this.resize();\r\n\r\n        add(this);\r\n    }\r\n\r\n    play() {\r\n        if (!this.isPlaying) {\r\n            if (!this.isPaused) this.reset(this.reversed);\r\n            this.isPaused = false;\r\n            this.pausedTime = 0;\r\n            this.isPlaying = true;\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        this.reset(this.reversed);\r\n        this.isPlaying = false;\r\n        this.drawFrame = true;\r\n    }\r\n\r\n    pause() {\r\n        if (this.isPlaying) {\r\n            this.isPaused = true;\r\n            this.pausedTime = this.time;\r\n            this.isPlaying = false;\r\n        }\r\n    }\r\n\r\n    gotoAndPlay(id) {\r\n        const marker = this.getMarker(id);\r\n        if (marker) {\r\n            this.time = marker.time;\r\n            this.pausedTime = 0;\r\n            this.setKeyframes(this.time);\r\n            this.isPlaying = true;\r\n        }\r\n    }\r\n\r\n    gotoAndStop(id) {\r\n        const marker = this.getMarker(id);\r\n        if (marker) {\r\n            this.time = marker.time;\r\n            this.setKeyframes(this.time);\r\n            this.drawFrame = true;\r\n            this.isPlaying = false;\r\n        }\r\n    }\r\n\r\n    getMarker(id) {\r\n        let marker;\r\n        if (typeof id === 'number') {\r\n            marker = this.markers[id];\r\n        } else if (typeof id === 'string') {\r\n            marker = this.markers.find(marker => marker.comment === id);\r\n        }\r\n\r\n        if (marker) return marker;\r\n        console.warn('Marker not found');\r\n    }\r\n\r\n    checkStopMarkers(from, to) {\r\n        return this.markers.find(marker => marker.stop && marker.time > from && marker.time < to);\r\n    }\r\n\r\n\r\n    preload() {\r\n        const promises = this.layers.filter(layer => layer instanceof ImageLayer).map(layer => new layer.preload());\r\n        return Promise.all(promises).catch(error => console.error(error));\r\n    }\r\n\r\n    reset() {\r\n        this.pausedTime = 0;\r\n        this.time = this.reversed ? this.duration : 0;\r\n        this.layers.forEach(layer => layer.reset(this.reversed));\r\n    }\r\n\r\n    setKeyframes(time) {\r\n        this.layers.forEach(layer => layer.setKeyframes(time));\r\n    }\r\n\r\n    destroy() {\r\n        this.isPlaying = false;\r\n        if (this.canvas.parentNode) this.canvas.parentNode.removeChild(this.canvas);\r\n        remove(this);\r\n    }\r\n\r\n    resize(w) {\r\n        if (this.fluid) {\r\n            const width = w || this.canvas.clientWidth || this.baseWidth;\r\n            this.canvas.width = width * this.devicePixelRatio;\r\n            this.canvas.height = width / this.ratio * this.devicePixelRatio;\r\n\r\n            this.scale = width / this.baseWidth * this.devicePixelRatio;\r\n            this.ctx.transform(this.scale, 0, 0, this.scale, 0, 0);\r\n            this.setKeyframes(this.time);\r\n            this.drawFrame = true;\r\n        }\r\n    }\r\n\r\n    setGradients(name, stops) {\r\n        if (!this.gradients[name]) {\r\n            console.warn(`Gradient with name: ${name} not found.`);\r\n            return;\r\n        }\r\n\r\n        this.gradients[name].forEach(gradient => {\r\n            gradient.stops = stops;\r\n        });\r\n    }\r\n\r\n    getSpriteSheet(fps = 25, width = 50, maxWidth = 4096) {\r\n        const ratio = width / this.baseWidth;\r\n        const height = this.baseHeight * ratio;\r\n        const numFrames = Math.floor((this.duration / 1000) * fps);\r\n        const buffer = document.createElement('canvas');\r\n        const ctx = buffer.getContext('2d');\r\n\r\n        const rowsX = Math.floor(maxWidth / width);\r\n        const rowsY = Math.ceil(numFrames / rowsX);\r\n\r\n        let indexX = 0;\r\n        let indexY = 0;\r\n\r\n        buffer.width = rowsX * width;\r\n        buffer.height = rowsY * height;\r\n\r\n        this.resize(width);\r\n\r\n        for (let i = 0; i < numFrames; i++) {\r\n            const step = i / numFrames;\r\n            const time = step * this.duration;\r\n            this.setKeyframes(time);\r\n            this.draw(time);\r\n\r\n            const x = indexX * width;\r\n            const y = indexY * height;\r\n\r\n            if ((indexX + 1) >= rowsX) {\r\n                indexX = 0;\r\n                indexY++;\r\n            } else {\r\n                indexX++;\r\n            }\r\n\r\n            ctx.drawImage(this.canvas, x, y, width, height);\r\n        }\r\n\r\n        return {\r\n            frames: numFrames,\r\n            canvas: buffer,\r\n            offsetX: width,\r\n            offsetY: height,\r\n            rowsX,\r\n            rowsY,\r\n        }\r\n    }\r\n\r\n    draw(time) {\r\n        this.ctx.clearRect(0, 0, this.baseWidth, this.baseHeight);\r\n\r\n        this.layers.forEach(layer => {\r\n            if (time >= layer.in && time <= layer.out) {\r\n                layer.draw(this.ctx, time);\r\n            }\r\n        });\r\n    }\r\n\r\n    update(time) {\r\n        if (!this.then) this.then = time;\r\n\r\n        const delta = time - this.then;\r\n        this.then = time;\r\n\r\n        if (this.isPlaying) {\r\n            this.time = this.reversed ? this.time - delta : this.time + delta;\r\n\r\n            const stopMarker = this.checkStopMarkers(this.time - delta, this.time);\r\n\r\n            if (this.time > this.duration || this.reversed && this.time < 0) {\r\n                this.time = this.reversed ? 0 : this.duration - 1;\r\n                this.isPlaying = false;\r\n                this.emit('complete');\r\n                if (this.loop) {\r\n                    this.play();\r\n                }\r\n            } else if (stopMarker) {\r\n                this.time = stopMarker.time;\r\n                this.pause();\r\n                this.emit('stop', stopMarker);\r\n            } else {\r\n                this.draw(this.time);\r\n            }\r\n            this.emit('update');\r\n        } else if (this.drawFrame) {\r\n            this.drawFrame = false;\r\n            this.draw(this.time);\r\n            this.emit('update');\r\n        }\r\n    }\r\n\r\n    set step(step) {\r\n        this.isPlaying = false;\r\n        this.time = step * this.duration;\r\n        this.pausedTime = this.time;\r\n        this.setKeyframes(this.time);\r\n        this.drawFrame = true;\r\n    }\r\n\r\n    get step() {\r\n        return this.time / this.duration;\r\n    }\r\n\r\n    get reversed() {\r\n        return this._reversed;\r\n    }\r\n\r\n    set reversed(bool) {\r\n        this._reversed = bool;\r\n        if (this.pausedTime) {\r\n            this.time = this.pausedTime;\r\n        } else if (!this.isPlaying) {\r\n            this.time = this.reversed ? this.duration : 0;\r\n        }\r\n        this.setKeyframes(this.time);\r\n    }\r\n}\r\n\r\nexport default Animation;\r\n","import {update, autoPlay, add, remove} from './core'\r\nimport Animation from './Animation';\r\nexport {Animation, update, autoPlay, add, remove};\r\n"],"sourceRoot":""}